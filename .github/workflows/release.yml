name: Create Release

on:
  push:
    branches:
      - main
      - issue182_releaseprocess

permissions:
  contents: write
  packages: read
  actions: read

jobs:
  call-macos-build:
    name: Build macOS Executable
    uses: ./.github/workflows/macos-build.yml@main

  call-windows-build:
    name: Build Windows Executable
    uses: ./.github/workflows/windows-build.yml@main

  release:
    name: Create GitHub Release
    needs: [call-macos-build, call-windows-build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create Artifacts Directory
        run: mkdir -p artifacts/macos artifacts/windows

      - name: Download macOS Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: SpeechTranscription_macos
          path: artifacts/macos

      - name: Download Windows Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: SpeechTranscription_windows
          path: artifacts/windows

      - name: Create Project ZIP
        run: |
          echo "## Build Details" > release_notes.md
          echo "Build Number: ${{ github.run_number }}" >> release_notes.md
          echo "Commit: ${{ github.sha }}" >> release_notes.md
          echo "Branch: ${{ github.ref_name }}" >> release_notes.md
          echo "Event: ${{ github.event_name }}" >> release_notes.md
          echo "" >> release_notes.md
          echo "## Downloads" >> release_notes.md

          if [ -d "artifacts/macos" ] && [ "$(ls -A artifacts/macos)" ]; then
            echo "- macOS executable included" >> release_notes.md
            zip -j artifacts/Saltify_macos.zip artifacts/macos/*
          else
            echo "Note: macOS executable not available" >> release_notes.md
          fi

          if [ -d "artifacts/windows" ] && [ "$(ls -A artifacts/windows)" ]; then
            echo "- Windows executable included" >> release_notes.md
            zip -j artifacts/Saltify_windows.zip artifacts/windows/*
          else
            echo "Note: Windows executable not available" >> release_notes.md
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body_path: ./release_notes.md
          draft: false
          prerelease: false

      - name: Upload macOS Executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/Saltify_macos.zip
          asset_name: Saltify_macos.zip
          asset_content_type: application/zip

      - name: Upload Windows Executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/Saltify_windows.zip
          asset_name: Saltify_windows.zip
          asset_content_type: application/zip
