name: Build, Test, and Release on macOS and Windows

on:
  push:
    branches:
      - issue168_automated-releases

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ['3.11', '3.12']
      fail-fast: false  # Continue with other builds even if one fails

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated to v4

      - name: Set up Python
        uses: actions/setup-python@v5  # Updated to v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest
        continue-on-error: true  # Allow the workflow to continue even if tests fail

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Explicitly grant permission to create releases
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate release notes
        id: generate_notes
        run: |
          echo "## Automated Release" > release_notes.md
          echo "Build number: ${{ github.run_number }}" >> release_notes.md
          echo "Commit: ${{ github.sha }}" >> release_notes.md

      - name: Create Release
        uses: softprops/action-gh-release@v1  # Using a more modern release action
        with:
          tag_name: v${{ github.run_number }}
          name: Release ${{ github.run_number }}
          body_path: release_notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: build-artifact
          path: ./dist/
          if-no-files-found: warn  # Don't fail if dist directory is empty