on: 
  push:
    branches:
      - main
      - fix-mac-exe
      - testingv4artifact
      - issue169_dependency
      - issue178_build-test-failures

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v4
      # Step 2: Set up Python
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      # Step 3: Install Homebrew
      - name: Install Homebrew
        run: |
          if ! command -v brew &> /dev/null; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi
      # Step 4: Install MySQL and other Homebrew packages
      - name: Install MySQL and required packages
        run: |
          brew install mysql pkg-config portaudio
          brew services start mysql
          pip install pyaudio
      # Set MySQL environment variables
      - name: Set MySQL environment variables
        run: |
          export MYSQLCLIENT_CFLAGS='pkg-config mysqlclient --cflags'
          export MYSQLCLIENT_LDFLAGS='pkg-config mysqlclient --libs'
      # Step 5: Install Java (if required)
      - name: Install Java
        run: |
          if ! java -version; then
            brew install openjdk@11
          fi
      # Step 6: Install dependencies
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller importlib-metadata sacremoses tokenizers
      # Uninstall incompatible typing package
      - run: pip uninstall -y typing
#      - name: Install Specific Python Version
#        uses: actions/setup-python@v4
#        with:
#          python-version: 3.11.7
      # Step 7: Install and configure NLTK
      - name: Install NLTK and fix SSL issues
        run: |
          pip install nltk certifi
          CERT_PATH=$(python -m certifi)
          export SSL_CERT_FILE=${CERT_PATH}
          export REQUESTS_CA_BUNDLE=${CERT_PATH}
          python -c "import nltk; nltk.download()"
      # Step 8: Build the executable
      - name: Build executable
        run: |
          pyinstaller --name Saltify --windowed --noconfirm --onefile -c \
            --copy-metadata torch --copy-metadata tqdm --copy-metadata regex \
            --copy-metadata sacremoses --copy-metadata requests --copy-metadata packaging \
            --copy-metadata filelock --copy-metadata numpy --copy-metadata tokenizers \
            --copy-metadata importlib_metadata --collect-data sv_ttk \
            --recursive-copy-metadata "openai-whisper" --collect-data whisper GUI.py
      # Step 9: Upload the built artifact
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: SpeechTranscription_macos
          path: dist/Saltify