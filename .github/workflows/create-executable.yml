on:
  push:
    branches:
      - main
      - fix-mac-exe
      - testingv4artifact
      - issue169_dependency

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11.7'

      - name: Install dependencies for macOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install mysql pkg-config portaudio
          pip install -r requirements.txt pyinstaller importlib-metadata sacremoses tokenizers
          pip uninstall -y typing
          pyinstaller --name Saltify --windowed --noconfirm --onedir -c --copy-metadata torch --copy-metadata tqdm --copy-metadata regex --copy-metadata sacremoses --copy-metadata requests --copy-metadata packaging --copy-metadata filelock --copy-metadata numpy --copy-metadata tokenizers --copy-metadata importlib_metadata --collect-data sv_ttk --recursive-copy-metadata "openai-whisper" --collect-data whisper GUI.py

      - name: Install dependencies for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          pip install -r requirements.txt pyinstaller importlib-metadata sacremoses tokenizers
          pip uninstall -y typing
          pyinstaller --name Saltify --windowed --noconfirm --onedir -c --copy-metadata torch --copy-metadata tqdm --copy-metadata regex --copy-metadata sacremoses --copy-metadata requests --copy-metadata packaging --copy-metadata filelock --copy-metadata numpy --copy-metadata tokenizers --copy-metadata importlib_metadata --collect-data sv_ttk --recursive-copy-metadata "openai-whisper" --collect-data whisper GUI.py

      - name: Create Windows Installer
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          curl -L -o isetup.exe "https://jrsoftware.org/download.php/is.exe"
          echo [Setup] > SaltifyInstaller.iss
          echo AppName=Saltify >> SaltifyInstaller.iss
          echo AppVersion=1.0 >> SaltifyInstaller.iss
          echo DefaultDirName={pf}\Saltify >> SaltifyInstaller.iss
          echo OutputBaseFilename=SaltifyInstaller >> SaltifyInstaller.iss
          echo [Files] >> SaltifyInstaller.iss
          echo Source: "dist\\Saltify\\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs >> SaltifyInstaller.iss
          echo [Icons] >> SaltifyInstaller.iss
          echo Name: "{group}\Saltify"; Filename: "{app}\Saltify.exe" >> SaltifyInstaller.iss
          isetup.exe /cc SaltifyInstaller.iss

      - uses: actions/upload-artifact@v4
        if: ${{ matrix.os == 'macos-latest' }}
        with:
          name: SpeechTranscription_macos
          path: dist/Saltify/*

      - uses: actions/upload-artifact@v4
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          name: SpeechTranscription_windows
          path: dist/Saltify/*
